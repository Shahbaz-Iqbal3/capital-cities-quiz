// Quiz App for Country Capitals

// Array of countries and their capitals
const countriesAndCapitals =[
    ["Afghanistan", "Kabul", "ðŸ‡¦ðŸ‡«"],
    ["Albania", "Tirana", "ðŸ‡¦ðŸ‡±"],
    ["Algeria", "Algiers", "ðŸ‡©ðŸ‡¿"],
    ["Andorra", "Andorra la Vella", "ðŸ‡¦ðŸ‡©"],
    ["Angola", "Luanda", "ðŸ‡¦ðŸ‡´"],
    ["Antigua and Barbuda", "Saint John's", "ðŸ‡¦ðŸ‡¬"],
    ["Argentina", "Buenos Aires", "ðŸ‡¦ðŸ‡·"],
    ["Armenia", "Yerevan", "ðŸ‡¦ðŸ‡²"],
    ["Australia", "Canberra", "ðŸ‡¦ðŸ‡º"],
    ["Austria", "Vienna", "ðŸ‡¦ðŸ‡¹"],
    ["Azerbaijan", "Baku", "ðŸ‡¦ðŸ‡¿"],
    ["Bahamas", "Nassau", "ðŸ‡§ðŸ‡¸"],
    ["Bahrain", "Manama", "ðŸ‡§ðŸ‡­"],
    ["Bangladesh", "Dhaka", "ðŸ‡§ðŸ‡©"],
    ["Barbados", "Bridgetown", "ðŸ‡§ðŸ‡§"],
    ["Belarus", "Minsk", "ðŸ‡§ðŸ‡¾"],
    ["Belgium", "Brussels", "ðŸ‡§ðŸ‡ª"],
    ["Belize", "Belmopan", "ðŸ‡§ðŸ‡¿"],
    ["Benin", "Porto-Novo", "ðŸ‡§ðŸ‡¯"],
    ["Bhutan", "Thimphu", "ðŸ‡§ðŸ‡¹"],
    ["Bolivia (Plurinational State of)", "Sucre", "ðŸ‡§ðŸ‡´"],
    ["Bosnia and Herzegovina", "Sarajevo", "ðŸ‡§ðŸ‡¦"],
    ["Botswana", "Gaborone", "ðŸ‡§ðŸ‡¼"],
    ["Brazil", "BrasÃ­lia", "ðŸ‡§ðŸ‡·"],
    ["Brunei Darussalam", "Bandar Seri Begawan", "ðŸ‡§ðŸ‡³"],
    ["Bulgaria", "Sofia", "ðŸ‡§ðŸ‡¬"],
    ["Burkina Faso", "Ouagadougou", "ðŸ‡§ðŸ‡«"],
    ["Burundi", "Gitega", "ðŸ‡§ðŸ‡®"],
    ["Cabo Verde", "Praia", "ðŸ‡¨ðŸ‡»"],
    ["Cambodia", "Phnom Penh", "ðŸ‡°ðŸ‡­"],
    ["Cameroon", "YaoundÃ©", "ðŸ‡¨ðŸ‡²"],
    ["Canada", "Ottawa", "ðŸ‡¨ðŸ‡¦"],
    ["Central African Republic", "Bangui", "ðŸ‡¨ðŸ‡«"],
    ["Chad", "N'Djamena", "ðŸ‡¹ðŸ‡©"],
    ["Chile", "Santiago", "ðŸ‡¨ðŸ‡±"],
    ["China", "Beijing", "ðŸ‡¨ðŸ‡³"],
    ["Colombia", "BogotÃ¡", "ðŸ‡¨ðŸ‡´"],
    ["Comoros", "Moroni", "ðŸ‡°ðŸ‡²"],
    ["Congo", "Brazzaville", "ðŸ‡¨ðŸ‡¬"],
    ["Costa Rica", "San JosÃ©", "ðŸ‡¨ðŸ‡·"],
    ["CÃ´te D'Ivoire", "Yamoussoukro", "ðŸ‡¨ðŸ‡®"],
    ["Croatia", "Zagreb", "ðŸ‡­ðŸ‡·"],
    ["Cuba", "Havana", "ðŸ‡¨ðŸ‡º"],
    ["Cyprus", "Nicosia", "ðŸ‡¨ðŸ‡¾"],
    ["Czechia", "Prague", "ðŸ‡¨ðŸ‡¿"],
    ["Democratic People's Republic of Korea", "Pyongyang", "ðŸ‡°ðŸ‡µ"],
    ["Democratic Republic of the Congo", "Kinshasa", "ðŸ‡¨ðŸ‡©"],
    ["Denmark", "Copenhagen", "ðŸ‡©ðŸ‡°"],
    ["Djibouti", "Djibouti", "ðŸ‡©ðŸ‡¯"],
    ["Dominica", "Roseau", "ðŸ‡©ðŸ‡²"],
    ["Dominican Republic", "Santo Domingo", "ðŸ‡©ðŸ‡´"],
    ["Ecuador", "Quito", "ðŸ‡ªðŸ‡¨"],
    ["Egypt", "Cairo", "ðŸ‡ªðŸ‡¬"],
    ["El Salvador", "San Salvador", "ðŸ‡¸ðŸ‡»"],
    ["Equatorial Guinea", "Malabo", "ðŸ‡¬ðŸ‡¶"],
    ["Eritrea", "Asmara", "ðŸ‡ªðŸ‡·"],
    ["Estonia", "Tallinn", "ðŸ‡ªðŸ‡ª"],
    ["Eswatini", "Mbabane", "ðŸ‡¸ðŸ‡¿"],
    ["Ethiopia", "Addis Ababa", "ðŸ‡ªðŸ‡¹"],
    ["Fiji", "Suva", "ðŸ‡«ðŸ‡¯"],
    ["Finland", "Helsinki", "ðŸ‡«ðŸ‡®"],
    ["France", "Paris", "ðŸ‡«ðŸ‡·"],
    ["Gabon", "Libreville", "ðŸ‡¬ðŸ‡¦"],
    ["Gambia (Republic of The)", "Banjul", "ðŸ‡¬ðŸ‡²"],
    ["Georgia", "Tbilisi", "ðŸ‡¬ðŸ‡ª"],
    ["Germany", "Berlin", "ðŸ‡©ðŸ‡ª"],
    ["Ghana", "Accra", "ðŸ‡¬ðŸ‡­"],
    ["Greece", "Athens", "ðŸ‡¬ðŸ‡·"],
    ["Grenada", "St. George's", "ðŸ‡¬ðŸ‡©"],
    ["Guatemala", "Guatemala City", "ðŸ‡¬ðŸ‡¹"],
    ["Guinea", "Conakry", "ðŸ‡¬ðŸ‡³"],
    ["Guinea Bissau", "Bissau", "ðŸ‡¬ðŸ‡¼"],
    ["Guyana", "Georgetown", "ðŸ‡¬ðŸ‡¾"],
    ["Haiti", "Port-au-Prince", "ðŸ‡­ðŸ‡¹"],
    ["Honduras", "Tegucigalpa", "ðŸ‡­ðŸ‡³"],
    ["Hungary", "Budapest", "ðŸ‡­ðŸ‡º"],
    ["Iceland", "Reykjavik", "ðŸ‡®ðŸ‡¸"],
    ["India", "New Delhi", "ðŸ‡®ðŸ‡³"],
    ["Indonesia", "Jakarta", "ðŸ‡®ðŸ‡©"],
    ["Iran (Islamic Republic of)", "Tehran", "ðŸ‡®ðŸ‡·"],
    ["Iraq", "Baghdad", "ðŸ‡®ðŸ‡¶"],
    ["Ireland", "Dublin", "ðŸ‡®ðŸ‡ª"],
    ["Israel", "Jerusalem", "ðŸ‡®ðŸ‡±"],
    ["Italy", "Rome", "ðŸ‡®ðŸ‡¹"],
    ["Jamaica", "Kingston", "ðŸ‡¯ðŸ‡²"],
    ["Japan", "Tokyo", "ðŸ‡¯ðŸ‡µ"],
    ["Jordan", "Amman", "ðŸ‡¯ðŸ‡´"],
    ["Kazakhstan", "Astana", "ðŸ‡°ðŸ‡¿"],
    ["Kenya", "Nairobi", "ðŸ‡°ðŸ‡ª"],
    ["Kiribati", "South Tarawa", "ðŸ‡°ðŸ‡®"],
    ["Kuwait", "Kuwait City", "ðŸ‡°ðŸ‡¼"],
    ["Kyrgyzstan", "Bishkek", "ðŸ‡°ðŸ‡¬"],
    ["Lao Peopleâ€™s Democratic Republic", "Vientiane", "ðŸ‡±ðŸ‡¦"],
    ["Latvia", "Riga", "ðŸ‡±ðŸ‡»"],
    ["Lebanon", "Beirut", "ðŸ‡±ðŸ‡§"],
    ["Lesotho", "Maseru", "ðŸ‡±ðŸ‡¸"],
    ["Liberia", "Monrovia", "ðŸ‡±ðŸ‡·"],
    ["Libya", "Tripoli", "ðŸ‡±ðŸ‡¾"],
    ["Liechtenstein", "Vaduz", "ðŸ‡±ðŸ‡®"],
    ["Lithuania", "Vilnius", "ðŸ‡±ðŸ‡¹"],
    ["Luxembourg", "Luxembourg", "ðŸ‡±ðŸ‡º"],
    ["Madagascar", "Antananarivo", "ðŸ‡²ðŸ‡¬"],
    ["Malawi", "Lilongwe", "ðŸ‡²ðŸ‡¼"],
    ["Malaysia", "Kuala Lumpur", "ðŸ‡²ðŸ‡¾"],
    ["Maldives", "MalÃ©", "ðŸ‡²ðŸ‡»"],
    ["Mali", "Bamako", "ðŸ‡²ðŸ‡±"],
    ["Malta", "Valletta", "ðŸ‡²ðŸ‡¹"],
    ["Marshall Islands", "Majuro", "ðŸ‡²ðŸ‡­"],
    ["Mauritania", "Nouakchott", "ðŸ‡²ðŸ‡·"],
    ["Mauritius", "Port Louis", "ðŸ‡²ðŸ‡º"],
    ["Mexico", "Mexico City", "ðŸ‡²ðŸ‡½"],
    ["Micronesia (Federated States of)", "Palikir", "ðŸ‡«ðŸ‡²"],
    ["Monaco", "Monaco", "ðŸ‡²ðŸ‡¨"],
    ["Mongolia", "Ulaanbaatar", "ðŸ‡²ðŸ‡³"],
    ["Montenegro", "Podgorica", "ðŸ‡²ðŸ‡ª"],
    ["Morocco", "Rabat", "ðŸ‡²ðŸ‡¦"],
    ["Mozambique", "Maputo", "ðŸ‡²ðŸ‡¿"],
    ["Myanmar", "Naypyidaw", "ðŸ‡²ðŸ‡²"],
    ["Namibia", "Windhoek", "ðŸ‡³ðŸ‡¦"],
    ["Nauru", "Yaren", "ðŸ‡³ðŸ‡·"],
    ["Nepal", "Kathmandu", "ðŸ‡³ðŸ‡µ"],
    ["Netherlands (Kingdom of the)", "Amsterdam", "ðŸ‡³ðŸ‡±"],
    ["New Zealand", "Wellington", "ðŸ‡³ðŸ‡¿"],
    ["Nicaragua", "Managua", "ðŸ‡³ðŸ‡®"],
    ["Niger", "Niamey", "ðŸ‡³ðŸ‡ª"],
    ["Nigeria", "Abuja", "ðŸ‡³ðŸ‡¬"],
    ["North Macedonia", "Skopje", "ðŸ‡²ðŸ‡°"],
    ["Norway", "Oslo", "ðŸ‡³ðŸ‡´"],
    ["Oman", "Muscat", "ðŸ‡´ðŸ‡²"],
    ["Pakistan", "Islamabad", "ðŸ‡µðŸ‡°"],
    ["Palau", "Ngerulmud", "ðŸ‡µðŸ‡¼"],
    ["Panama", "Panama City", "ðŸ‡µðŸ‡¦"],
    ["Papua New Guinea", "Port Moresby", "ðŸ‡µðŸ‡¬"],
    ["Paraguay", "AsunciÃ³n", "ðŸ‡µðŸ‡¾"],
    ["Peru", "Lima", "ðŸ‡µðŸ‡ª"],
    ["Philippines", "Manila", "ðŸ‡µðŸ‡­"],
    ["Poland", "Warsaw", "ðŸ‡µðŸ‡±"],
    ["Portugal", "Lisbon", "ðŸ‡µðŸ‡¹"],
    ["Qatar", "Doha", "ðŸ‡¶ðŸ‡¦"],
    ["Republic of Korea", "Seoul", "ðŸ‡°ðŸ‡·"],
    ["Republic of Moldova", "ChiÈ™inÄƒu", "ðŸ‡²ðŸ‡©"],
    ["Romania", "Bucharest", "ðŸ‡·ðŸ‡´"],
    ["Russian Federation", "Moscow", "ðŸ‡·ðŸ‡º"],
    ["Rwanda", "Kigali", "ðŸ‡·ðŸ‡¼"],
    ["Saint Kitts and Nevis", "Basseterre", "ðŸ‡°ðŸ‡³"],
    ["Saint Lucia", "Castries", "ðŸ‡±ðŸ‡¨"],
    ["Saint Vincent and the Grenadines", "Kingstown", "ðŸ‡»ðŸ‡¨"],
    ["Samoa", "Apia", "ðŸ‡¼ðŸ‡¸"],
    ["San Marino", "San Marino", "ðŸ‡¸ðŸ‡²"],
    ["Sao Tome and Principe", "SÃ£o TomÃ©", "ðŸ‡¸ðŸ‡¹"],
    ["Saudi Arabia", "Riyadh", "ðŸ‡¸ðŸ‡¦"],
    ["Senegal", "Dakar", "ðŸ‡¸ðŸ‡³"],
    ["Serbia", "Belgrade", "ðŸ‡·ðŸ‡¸"],
    ["Seychelles", "Victoria", "ðŸ‡¸ðŸ‡¨"],
    ["Sierra Leone", "Freetown", "ðŸ‡¸ðŸ‡±"],
    ["Singapore", "Singapore", "ðŸ‡¸ðŸ‡¬"],
    ["Slovakia", "Bratislava", "ðŸ‡¸ðŸ‡°"],
    ["Slovenia", "Ljubljana", "ðŸ‡¸ðŸ‡®"],
    ["Solomon Islands", "Honiara", "ðŸ‡¸ðŸ‡§"],
    ["Somalia", "Mogadishu", "ðŸ‡¸ðŸ‡´"],
    ["South Africa", "Pretoria", "ðŸ‡¿ðŸ‡¦"],
    ["South Sudan", "Juba", "ðŸ‡¸ðŸ‡¸"],
    ["Spain", "Madrid", "ðŸ‡ªðŸ‡¸"],
    ["Sri Lanka", "Colombo", "ðŸ‡±ðŸ‡°"],
    ["Sudan", "Khartoum", "ðŸ‡¸ðŸ‡©"],
    ["Suriname", "Paramaribo", "ðŸ‡¸ðŸ‡·"],
    ["Sweden", "Stockholm", "ðŸ‡¸ðŸ‡ª"],
    ["Switzerland", "Bern", "ðŸ‡¨ðŸ‡­"],
    ["Syrian Arab Republic", "Damascus", "ðŸ‡¸ðŸ‡¾"],
    ["Tajikistan", "Dushanbe", "ðŸ‡¹ðŸ‡¯"],
    ["Thailand", "Bangkok", "ðŸ‡¹ðŸ‡­"],
    ["Timor-Leste", "Dili", "ðŸ‡¹ðŸ‡±"],
    ["Togo", "LomÃ©", "ðŸ‡¹ðŸ‡¬"],
    ["Tonga", "NukuÊ»alofa", "ðŸ‡¹ðŸ‡´"],
    ["Trinidad and Tobago", "Port of Spain", "ðŸ‡¹ðŸ‡¹"],
    ["Tunisia", "Tunis", "ðŸ‡¹ðŸ‡³"],
    ["TÃ¼rkiye", "Ankara", "ðŸ‡¹ðŸ‡·"],
    ["Turkmenistan", "Ashgabat", "ðŸ‡¹ðŸ‡²"],
    ["Tuvalu", "Funafuti", "ðŸ‡¹ðŸ‡»"],
    ["Uganda", "Kampala", "ðŸ‡ºðŸ‡¬"],
    ["Ukraine", "Kyiv", "ðŸ‡ºðŸ‡¦"],
    ["United Arab Emirates", "Abu Dhabi", "ðŸ‡¦ðŸ‡ª"],
    ["United Kingdom of Great Britain and Northern Ireland", "London", "ðŸ‡¬ðŸ‡§"],
    ["United Republic of Tanzania", "Dodoma", "ðŸ‡¹ðŸ‡¿"],
    ["United States of America", "Washington, D.C.", "ðŸ‡ºðŸ‡¸"],
    ["Uruguay", "Montevideo", "ðŸ‡ºðŸ‡¾"],
    ["Uzbekistan", "Tashkent", "ðŸ‡ºðŸ‡¿"],
    ["Vanuatu", "Port Vila", "ðŸ‡»ðŸ‡º"],
    ["Venezuela, Bolivarian Republic of", "Caracas", "ðŸ‡»ðŸ‡ª"],
    ["Viet Nam", "Hanoi", "ðŸ‡»ðŸ‡³"],
    ["Yemen", "Sana'a", "ðŸ‡¾ðŸ‡ª"],
    ["Zambia", "Lusaka", "ðŸ‡¿ðŸ‡²"],
    ["Zimbabwe", "Harare", "ðŸ‡¿ðŸ‡¼"]
]

// Variables
let currentQuestionIndex = 0;
let correctAnswers = 0;
let incorrectAnswers = 0;
let isQuizOver = false;

// DOM elements
const questionElement = document.getElementById("question");
const progressElement = document.getElementById("progress");
const optionsContainer = document.getElementById("options");
const resultElement = document.getElementById("result");
const scoreElement = document.getElementById("score");
const nextButton = document.getElementById("nextButton");
const prevButton = document.getElementById("prev");
const resetButton = document.getElementById("reset");
const endButton = document.getElementById("end");
let corectElement = ''


prevButton.addEventListener("click", () => {
  if (currentQuestionIndex > 1) {
    currentQuestionIndex = currentQuestionIndex -2
    loadNextQuestion()
  }
})
resetButton.addEventListener("click", () => {
  questionElement.style.display = "block";
  optionsContainer.style.display = "block";
  nextButton.style.display = "block";

  resultElement.textContent = ``;
  scoreElement.textContent = ''

  currentQuestionIndex = 0 
  isQuizOver = false
  incorrectAnswers = 0 
  correctAnswers = 0
  loadNextQuestion()
})
endButton.addEventListener("click", () => {
  isQuizOver = true;
    displayResult();
})

// Function to load the next question
function loadNextQuestion() {
  if (currentQuestionIndex >= countriesAndCapitals.length) {
    // Quiz is over
    isQuizOver = true;
    displayResult();
    return;
  }

  const currentQuestion = countriesAndCapitals[currentQuestionIndex];
  questionElement.textContent = `What is the capital of ${currentQuestion[0]} ${currentQuestion[2]} ?`;
  progressElement.textContent = `score: ${correctAnswers}  ________ ${currentQuestionIndex +1 } / ${countriesAndCapitals.length}`

  optionsContainer.innerHTML = "";

// Create an array to hold the options
let options = [];

// Add the correct answer
options.push(currentQuestion[1]);

// Add the incorrect answers
for (let i = 0; i < 3; i++) {
  options.push(getRandomCapital());
}

// Shuffle the options array
options = options.sort(() => Math.random() - 0.5);

// Create buttons for each option and append them to the container
options.forEach(optionText => {
  const option = document.createElement("button");
  option.textContent = optionText;
  if(option.textContent == currentQuestion[1]){
    corectElement = option
  }
  option.addEventListener("click", checkAnswer);
  optionsContainer.appendChild(option);
});

  currentQuestionIndex++;
}

// Function to get a random capital from the list (excluding the correct one)
function getRandomCapital() {
  let randomCapital;
  do {
    randomCapital =
      countriesAndCapitals[
        Math.floor(Math.random() * countriesAndCapitals.length)
      ][1];
  } while (randomCapital === countriesAndCapitals[currentQuestionIndex][1]);
  return randomCapital;
}


// Function to check the user's answer
function checkAnswer(event) {
  const selectedAnswer = event.target.textContent;
  console.log(event);
  
  const correctAnswer = countriesAndCapitals[currentQuestionIndex - 1][1];

  if (selectedAnswer === correctAnswer) {
    correctAnswers++;
    event.srcElement.style.borderColor = "green"
  } else {
    incorrectAnswers++;
    event.srcElement.style.borderColor = "red"
   corectElement.style.borderColor = "green"
  }
  optionsContainer.style.pointerEvents = "none"
  
}

// Function to display the final result
function displayResult() {
  questionElement.style.display = "none";
  optionsContainer.style.display = "none";
  nextButton.style.display = "none";

  resultElement.textContent = `Quiz Over!`;
  scoreElement.textContent = `Correct Answers: ${correctAnswers}, \n Incorrect Answers: ${incorrectAnswers}`;
}

// Load the first question
loadNextQuestion();

// Event listener for the next button
nextButton.addEventListener("click", () => {
  if (!isQuizOver) {
    optionsContainer.style.pointerEvents = "all"
    loadNextQuestion();
  }
});

// Sources:
// 1. https://github.com/AnaKarlaZ/FinalProjectWeb
// 2. https://github.com/Preetisharma9958/preeti_sharmatask4.github.io
// 3. https://github.com/robinsonfdossantos/JavaScript_Quiz
// 4. https://github.com/asifpinjari123/Quiz-App
